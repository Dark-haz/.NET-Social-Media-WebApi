// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Social_Media_API.Data;

#nullable disable

namespace Social_Media_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231008121606_AddCommentTable")]
    partial class AddCommentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Social_Media_API.Models.CommentModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Social_Media_API.Models.PostModels.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(1450),
                            Description = "Aperiam debitis consectetur consequatur ullam ea labore libero et inventore. Suscipit nobis est animi. Blanditiis saepe modi voluptatem atque et quo sed. Facilis eveniet cum rerum earum voluptate omnis non accusantium.",
                            ImageUrl = "",
                            Title = "Eos veniam distinctio sunt.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(1860),
                            Description = "Ut facere voluptas. Veniam voluptates id nesciunt rem non iure aut tenetur. Qui in vel consequuntur at. Consequatur quam repudiandae illo velit qui a sed expedita. Aliquam rerum amet sit nostrum et qui culpa nulla.",
                            ImageUrl = "",
                            Title = "Maiores facilis et exercitationem.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(2000),
                            Description = "Voluptates id et voluptatibus est voluptatem. Eos laudantium qui dolorum ad quo.",
                            ImageUrl = "",
                            Title = "Quasi velit soluta.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(2290),
                            Description = "Voluptatem ullam ut debitis recusandae tempore ipsum repellendus saepe nisi. Est autem saepe maxime et molestiae autem debitis. Sit illum minima et. Corrupti minus aut ut beatae repellat.",
                            ImageUrl = "",
                            Title = "Itaque ut delectus ea.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(2590),
                            Description = "Aliquid molestias quis rerum. Minus quae mollitia natus sint quis ipsam. Qui voluptate maiores voluptas. Quam occaecati voluptas necessitatibus quasi eveniet quo dolorem. Molestias possimus explicabo tenetur veritatis fugiat dolorem voluptate et.",
                            ImageUrl = "",
                            Title = "Provident et quasi.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(2850),
                            Description = "Qui quasi voluptate totam facere voluptatem numquam quas. At culpa quisquam necessitatibus eligendi dolor. Distinctio dolore et et molestias cumque est nobis. Magnam autem accusantium sequi ea eos similique. Alias facilis placeat.",
                            ImageUrl = "",
                            Title = "Fugiat velit dolore.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(3090),
                            Description = "Quia molestiae repellendus voluptates. Magni laboriosam quia quam eligendi. Enim esse quasi odit maiores facere. Assumenda quis expedita reiciendis nihil aliquid.",
                            ImageUrl = "",
                            Title = "Ut pariatur.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(3230),
                            Description = "Nisi sit voluptatem accusamus et ut repudiandae dolorum voluptas. Omnis suscipit enim sed facilis quibusdam fugit itaque.",
                            ImageUrl = "",
                            Title = "Et dolores eaque.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(3450),
                            Description = "Exercitationem magni dicta minus fugiat qui quibusdam. Assumenda nobis aut ipsa. Quia officiis eum quam qui consequatur eligendi aspernatur.",
                            ImageUrl = "",
                            Title = "Ratione non dolores.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 10, 8, 15, 16, 6, 522, DateTimeKind.Local).AddTicks(3630),
                            Description = "Provident velit consequuntur architecto consectetur veniam totam labore molestias sed. Quo voluptatum et et. Mollitia dolor enim facere qui aliquid.",
                            ImageUrl = "",
                            Title = "Molestias eligendi et omnis.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Social_Media_API.Models.CommentModels.Comment", b =>
                {
                    b.HasOne("Social_Media_API.Models.PostModels.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
