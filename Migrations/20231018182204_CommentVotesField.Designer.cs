// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Social_Media_API.Data;

#nullable disable

namespace Social_Media_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231018182204_CommentVotesField")]
    partial class CommentVotesField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Social_Media_API.Models.CommentModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(2820),
                            Description = "Quibusdam totam suscipit. Vel quo aliquid sint in autem. Non nisi autem voluptatem dolorem. Quia quia molestiae aut voluptate modi dolorum. Delectus et asperiores.",
                            PostID = 9,
                            Votes = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(2970),
                            Description = "Sunt nihil est sit modi. Quis quae at eligendi.",
                            PostID = 2,
                            Votes = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(3220),
                            Description = "Numquam enim aperiam omnis fuga quaerat repudiandae. Non perspiciatis quae culpa illo.",
                            PostID = 3,
                            Votes = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(3410),
                            Description = "Et ducimus nemo dicta veniam repellendus sunt inventore quia quasi. Repudiandae quas distinctio adipisci.",
                            PostID = 4,
                            Votes = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(3560),
                            Description = "Neque quia earum perferendis enim dolorem. Numquam in suscipit.",
                            PostID = 9,
                            Votes = 2
                        });
                });

            modelBuilder.Entity("Social_Media_API.Models.PostModels.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 455, DateTimeKind.Local).AddTicks(8920),
                            Description = "Quia natus et soluta maiores temporibus. Quidem cupiditate eum dicta velit tempora consequuntur id. Officiis qui dolorem voluptatem qui quidem et.",
                            ImageUrl = "",
                            Title = "Voluptatem autem itaque.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 455, DateTimeKind.Local).AddTicks(9300),
                            Description = "Natus libero ab porro est. Officiis dolores numquam est.",
                            ImageUrl = "",
                            Title = "Doloribus odio non aut.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 455, DateTimeKind.Local).AddTicks(9680),
                            Description = "Cum ipsa et eveniet et. Dicta adipisci est in voluptatem deleniti illo vitae non ut. Sint voluptates qui consectetur quia rerum eaque voluptas cumque sit. Quos maiores et aut asperiores libero quas.",
                            ImageUrl = "",
                            Title = "Iusto quidem nihil.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(60),
                            Description = "Omnis repellat iusto eum consectetur totam rerum dicta quis pariatur. Aut culpa fuga. Id delectus autem et in exercitationem distinctio atque rerum.",
                            ImageUrl = "",
                            Title = "Molestiae maxime amet.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(330),
                            Description = "Quia autem ex ipsa vel qui iste dolores illo nisi. Earum corporis labore labore. Enim assumenda reiciendis mollitia esse reprehenderit.",
                            ImageUrl = "",
                            Title = "Dignissimos consequatur odit.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(860),
                            Description = "Et nostrum quia dolores corrupti vel pariatur non. Qui facere qui quos vitae ipsum beatae qui. Voluptas similique quia animi eaque ullam aspernatur. Eaque voluptatem iusto beatae veniam nam facilis fugit accusantium. Nobis autem autem in est qui optio.",
                            ImageUrl = "",
                            Title = "Consequuntur ex qui in.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(1160),
                            Description = "Rerum qui dolorem voluptatem non. Tenetur ipsum est aut dolorum eius fuga. Est ut sunt aut. Dolorem quis consequatur ut harum magnam.",
                            ImageUrl = "",
                            Title = "Impedit cum sequi qui.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(1620),
                            Description = "Reiciendis magnam minus libero et nobis a numquam natus. Minima facilis voluptatibus accusantium non officia. Consequatur dolor assumenda a. Occaecati et vel quidem.",
                            ImageUrl = "",
                            Title = "Illo necessitatibus.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(1920),
                            Description = "Et inventore excepturi. Omnis optio molestias enim. Ea ut soluta error et.",
                            ImageUrl = "",
                            Title = "Voluptatibus debitis.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 10, 18, 21, 22, 4, 456, DateTimeKind.Local).AddTicks(2250),
                            Description = "Ex nostrum voluptatibus voluptas fugiat. Quod doloribus debitis aperiam nemo eum ex.",
                            ImageUrl = "",
                            Title = "Ullam non rerum.",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Social_Media_API.Models.UserModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "hello",
                            Role = "Admin",
                            Username = "Dio"
                        },
                        new
                        {
                            Id = 2,
                            Password = "hi",
                            Role = "Normal",
                            Username = "Jotaro"
                        });
                });

            modelBuilder.Entity("Social_Media_API.Models.CommentModels.Comment", b =>
                {
                    b.HasOne("Social_Media_API.Models.PostModels.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
